name: Publish Python Package

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.7.1"

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install

      - name: Run tests
        run: |
          poetry run pytest

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Bump version and publish
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if git log --oneline -1 --grep="^feat\|^fix\|^refactor\|^perf\|^ci\|^build\|^chore\|^docs\|^style\|^test" --count > 0; then
            # Create a new branch
            git checkout -b version-bump-$(date +%Y%m%d-%H%M%S)
            
            # Bump version and build
            poetry version patch
            NEW_VERSION=$(poetry version -s)
            echo "New version: $NEW_VERSION"
            poetry build
            
            # Commit changes
            git commit -am "Bump version to $NEW_VERSION"
            
            # Push branch and create PR
            git push origin HEAD
            
            # Create Pull Request
            gh pr create --title "Bump version to $NEW_VERSION" \
                        --body "Automated version bump to $NEW_VERSION" \
                        --label "version-bump"
            
            # Publish to PyPI
            poetry publish -u "__token__" -p "$PYPI_TOKEN"
          else
            echo "No significant changes detected. Skipping version bump and release."
          fi
